// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreInventory.Contexts;

namespace StoreInventory.Migrations
{
    [DbContext(typeof(ClothesContext))]
    [Migration("20210412113202_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClothesTypeGender", b =>
                {
                    b.Property<Guid>("ClothesTypesClothesTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GendersGenderID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClothesTypesClothesTypeID", "GendersGenderID");

                    b.HasIndex("GendersGenderID");

                    b.ToTable("ClothesTypeGender");
                });

            modelBuilder.Entity("StoreInventory.Models.Clothes", b =>
                {
                    b.Property<Guid>("ClothesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClothesTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClothesID");

                    b.HasIndex("ClothesTypeID");

                    b.HasIndex("GenderID");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("StoreInventory.Models.ClothesType", b =>
                {
                    b.Property<Guid>("ClothesTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ClothesTypeID");

                    b.ToTable("ClothesTypes");
                });

            modelBuilder.Entity("StoreInventory.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GenderID");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("ClothesTypeGender", b =>
                {
                    b.HasOne("StoreInventory.Models.ClothesType", null)
                        .WithMany()
                        .HasForeignKey("ClothesTypesClothesTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreInventory.Models.Gender", null)
                        .WithMany()
                        .HasForeignKey("GendersGenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreInventory.Models.Clothes", b =>
                {
                    b.HasOne("StoreInventory.Models.ClothesType", "ClothesType")
                        .WithMany()
                        .HasForeignKey("ClothesTypeID");

                    b.HasOne("StoreInventory.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderID");

                    b.Navigation("ClothesType");

                    b.Navigation("Gender");
                });
#pragma warning restore 612, 618
        }
    }
}
